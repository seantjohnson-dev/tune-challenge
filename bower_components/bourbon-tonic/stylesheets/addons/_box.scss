@mixin box($margin,$padding) {
	margin: $margin;
	padding: $padding;
}

@mixin zero-all {
	margin: 0px;
	padding: 0px;
}



@mixin box-rotate($angle) {
	@include prefixer(transform, rotate($angle), webkit ms);
	
	/*
	-webkit-transform: rotate($angle);  // Chrome, Opera 15+, Safari 3.1+ 
	-ms-transform: rotate($angle);  // IE 9 
	transform: rotate($angle);  // Firefox 16+, IE 10+, Opera 
	*/
}

@mixin border-radius($radius) {
	@include border-top-radius($radius);
	@include border-bottom-radius($radius);
	@include border-left-radius($radius);
	@include border-right-radius($radius);	
}

@mixin circle($size) {
	@include size($size);
	@include border-radius(50%);
	// overflow: hidden;
}



@mixin centered($width:0) {
	margin-left: auto;
	margin-right: auto;
	@if ($width > 0) { width: $width; }
}

@mixin left($width:0) {
	float: left;
	@if ($width > 0) { width: $width; }
}

@mixin right($width:0) {
	float: right;
	@if ($width > 0) { width: $width; }
}

@mixin top-left($top:0, $side:0, $position: absolute) {
	@include _position($position, $top null null $side);
}

@mixin top-right($top:0, $side:0, $position: absolute) {
	@include _position($position, $top $side null null);
}

@mixin bottom-left($bottom:0, $side:0, $position: absolute) {
	@include _position($position, null null $bottom $side);
}

@mixin bottom-right($bottom:0, $side:0, $position: absolute) {
	@include _position($position, null $side $bottom null);
}

@mixin bottom-center($bottom:0, $width:0) {
	@include _position(absolute, null null $bottom 50%);
	margin-left: $width / -2;
	width: $width;
}

@mixin absolute-centered($size) {
	position: absolute;
	
	@if length($size) >= 1 {
		$width: nth($size, 1);
		width: $width;
		left: 50%;
		margin-left: $width / -2;
	}
		
	@if length($size) == 2 {
		$height: nth($size, 2);
		height: $height;
		top: 50%;
		margin-top: $height / -2;
	}
}

// This is only here because bourbon's version of position won't take "null" anymore.
// The newer version has the unitless() function, but for some reason it doesn't work.
@mixin _position ($position: relative, $coordinates: 0 0 0 0) {
  @if type-of($position) == list {
    $coordinates: $position;
    $position: relative;
  }

  $top: nth($coordinates, 1);
  $right: nth($coordinates, 2);
  $bottom: nth($coordinates, 3);
  $left: nth($coordinates, 4);

  position: $position;

  @if $top == auto {
    top: $top;
  }
  @else if not($top == null) {
    top: $top;
  }

  @if $right == auto {
    right: $right;
  }
  @else if not($right == null) {
    right: $right;
  }

  @if $bottom == auto {
    bottom: $bottom;
  }
  @else if not($bottom == null) {
    bottom: $bottom;
  }

  @if $left == auto {
    left: $left;
  }
  @else if not($left == null) {
    left: $left;
  }
}
